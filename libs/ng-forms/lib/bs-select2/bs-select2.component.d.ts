import { AfterViewInit, ElementRef, EventEmitter, DoCheck } from '@angular/core';
import { DataInputBase } from '../common/classes/data-input-base';
import { SelectOption, SelectOptionGroup } from '../common/types';
export declare class BsSelect2Component extends DataInputBase implements AfterViewInit, DoCheck {
    class: string;
    select2ElementRef: ElementRef;
    theme: string;
    liveSearch: boolean;
    options: Array<SelectOption> | Array<SelectOptionGroup>;
    configs: {
        [key: string]: any;
    };
    noResults: string;
    allowClear: boolean;
    closeOnSelect: boolean;
    data: Array<any>;
    debug: boolean;
    dir: string;
    dropdownAutoWidth: boolean;
    dropdownCssClass: string;
    language: string;
    maximumInputLength: number;
    maximumSelectionLength: number;
    minimumInputLength: number;
    minimumResultsForSearch: number;
    multiple: boolean;
    placeholder: string;
    selectionCssClass: string;
    selectOnClose: boolean;
    tags: boolean;
    width: string;
    scrollAfterSelect: boolean;
    selectEvent: EventEmitter<any>;
    clearEvent: EventEmitter<any>;
    closeEvent: EventEmitter<any>;
    private select2;
    private validate;
    private select2Configs;
    private watchedProperties;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    bindWatchModelEvents(): void;
    detectPropertiesChanges(propName: string): void;
    initJQueryEl(): void;
    initSelect2(): void;
    bindEventsToSelect2(): void;
    bindEventsAfterValidateField(): void;
    buildSelect2Configs(): void;
    getMinimumResultsForSearch(): number;
    setSelect2ConfigsOverrides(): void;
    addOrRemoveValidationClasses(): void;
    initSelectedOptions(): void;
    disableSelect2WhenOptionsAreEmpty(): void;
    enableOrDisableSelect2(): void;
    refreshSelect2(): void;
    addFormControlClass(): void;
    addFormControlClassDelayed(): void;
    refresh(): void;
}
